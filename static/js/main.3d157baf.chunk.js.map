{"version":3,"sources":["store/webgl/types.ts","store/webgl/reducers.ts","store/projections/types.ts","store/projections/reducers.ts","store/radon/actions.ts","store/radon/reducers.ts","store/reducer.ts","components/radon/scene.tsx","containers/radon.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["WebGLActionType","MutationActionType","initialState","context","undefined","payloadSetter","t","state","action","type","payload","anchor","SET_ANCHOR","originalRotation","SET_ORIGINAL_ROTATION","rotationDelta","SET_ROTATION_DELTA","combineReducers","rotation","ROTATE","MODIFY_ROTATION","add","valueOf","translation","TRANSLATE","scale","SCALE","MODIFY_SCALE","boxUpdate","x","updateBox","updateBeamBox","initialBoxState","matrix","initialBeamBoxState","Math","PI","radon","beamBox","box","rays","dec","reducer","webgl","SET_CONTEXT","projections","v","y","z","Vector3","getRow","m","row","subset","index","toArray","Box","w","h","d","a","b","c","geometry","BoxGeometry","translate","rotateX","rotateY","rotateZ","Mesh","color","co","Color","MeshPhongMaterial","specular","addScalar","emissive","shininess","wireframe","side","DoubleSide","meshColor","Beams","obj","bbox","N","canvas","document","createElement","height","width","getContext","imgData","createImageData","i","start","floor","end","j","data","putImageData","texture","TextureLoader","load","toDataURL","mat","MeshBasicMaterial","map","transparent","geo","PlaneGeometry","RadonScene","children","webGLRenderer","camera","scene","oc","this","WebGLRenderer","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","Scene","PerspectiveCamera","position","console","log","light","DirectionalLight","set","normalize","OrbitControls","forEach","f","addEventListener","render","id","ref","appendChild","domElement","Radon","props","rs","bb","setInterval","rotateBeamBox","g","Group","barW","leftBar","rightBar","beams","BeamBox","numRays","style","onClick","incRays","decRays","Component","theta","connect","dispatch","rotateBox","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d157baf.chunk.js","sourcesContent":["export type Mat4 = [\n    number, number, number, number,\n    number, number, number, number,\n    number, number, number, number,\n    number, number, number, number,\n];\n\nexport interface WebGLState {\n    context: WebGLRenderingContext | undefined;\n}\n\nexport enum WebGLActionType {\n    SET_CONTEXT = 'SET_CONTEXT'\n}\n\nexport interface SetWebGLContextAction {\n    type: WebGLActionType;\n    payload: WebGLRenderingContext;\n}\n\nexport type WebGLAction = SetWebGLContextAction","import {WebGLState, WebGLAction, WebGLActionType} from 'store/webgl/types'\n\nvar initialState: WebGLState = {\n    context: undefined,\n};\n\nexport default function reducer(\n    state = initialState,\n    action: WebGLAction\n): WebGLState {\n    if (action === undefined ) {\n        return state;\n    }\n\n    switch(action.type) {\n        case WebGLActionType.SET_CONTEXT:\n            return {context: action.payload};\n        default:\n            return state;\n    }\n}","import {Vec3} from 'store/types';\nexport interface MutationState {\n  rotation: Vec3;\n  translation: Vec3;\n  scale: Vec3;\n  rotationDelta: Vec3 | null;\n  originalRotation: Vec3 | null;\n  anchor: Vec3 | null;\n}\n\nexport enum MutationActionType {\n  ROTATE = 'ROTATE',\n  TRANSLATE = 'TRANSLATE',\n  SCALE = 'SCALE',\n  MODIFY_SCALE = 'MODIFY_SCALE',\n  MODIFY_ROTATION = 'MODIFY_ROTATION',\n  SET_ANCHOR = 'SET_ANCHOR',\n  SET_ORIGINAL_ROTATION = 'SET_ORIGINAL_ROTATION',\n  SET_ROTATION_DELTA = 'SET_ROTATION_DELTA',\n  CALC_ROT = 'CALC_ROT',\n}\n\nexport interface MutationAction {\n  type: MutationActionType;\n  payload: Vec3 | null;\n}\n","import {\n  MutationState,\n  MutationAction,\n  MutationActionType,\n} from 'store/projections/types';\nimport {Vec3} from 'store/types';\nimport {add} from 'mathjs';\nimport {combineReducers} from 'redux';\n\nfunction payloadSetter(t: MutationActionType) {\n  return function(state: Vec3 | undefined | null, action: MutationAction) {\n    if (state === undefined) return null;\n    if (action.type !== t) return state;\n    return action.payload;\n  };\n}\n\nconst anchor = payloadSetter(MutationActionType.SET_ANCHOR);\nconst originalRotation = payloadSetter(\n  MutationActionType.SET_ORIGINAL_ROTATION,\n);\nconst rotationDelta = payloadSetter(MutationActionType.SET_ROTATION_DELTA);\n\nfunction translation(\n  translation: Vec3 = [0, 0, 0],\n  action: MutationAction,\n): Vec3 {\n  if (action.type !== MutationActionType.TRANSLATE) return translation;\n\n  if (action.payload === null) return translation;\n\n  return action.payload;\n}\n\nfunction scale(scale: Vec3 = [1, 1, 1], action: MutationAction) {\n  if (!action.payload) return scale;\n\n  switch (action.type) {\n    case MutationActionType.SCALE:\n      return action.payload;\n    case MutationActionType.MODIFY_SCALE:\n      return add(scale, action.payload).valueOf() as Vec3;\n    default:\n      return scale;\n  }\n}\n\nfunction rotation(rotation: Vec3 = [0, 0, 0], action: MutationAction) {\n  if (!action.payload) return rotation;\n\n  switch (action.type) {\n    case MutationActionType.ROTATE:\n      return action.payload;\n    case MutationActionType.MODIFY_ROTATION:\n      return add(rotation, action.payload).valueOf() as Vec3;\n    default:\n      return rotation;\n  }\n}\n\nexport default combineReducers<MutationState, MutationAction>({\n  rotation,\n  translation,\n  scale,\n  anchor,\n  originalRotation,\n  rotationDelta,\n});\n","import {Matrix} from 'mathjs';\n\nexport const UPDATE_BOX = 'UPDATE_BOX';\nexport const UPDATE_BEAM_BOX = 'UPDATE_BEAM_BOX';\nexport const INC_RAYS = 'INC_RAYS';\nexport const DEC_RAYS = 'DEC_RAYS';\n\nexport interface rayAction {\n  type: typeof INC_RAYS | typeof DEC_RAYS;\n}\n\nexport interface boxAction {\n  type: typeof UPDATE_BOX | typeof UPDATE_BEAM_BOX;\n  payload: Matrix;\n}\n\nexport type RadonAction = boxAction | rayAction;\n\nconst boxUpdate = (t: typeof UPDATE_BOX | typeof UPDATE_BEAM_BOX) => (\n  x: Matrix,\n) => ({\n  type: t,\n  payload: x,\n});\n\nexport const updateBox = boxUpdate(UPDATE_BOX);\nexport const updateBeamBox = boxUpdate(UPDATE_BEAM_BOX);\n\nexport const incRays = (): rayAction => ({\n  type: INC_RAYS,\n});\n\nexport const decRays = (): rayAction => ({\n  type: DEC_RAYS,\n});\n","import {add, Matrix, matrix} from 'mathjs';\nimport {combineReducers} from 'redux';\nimport {\n  boxAction,\n  rayAction,\n  UPDATE_BOX,\n  UPDATE_BEAM_BOX,\n  INC_RAYS,\n  DEC_RAYS,\n} from 'store/radon/actions';\n\nconst initialBoxState = matrix([[0, 0, 0], [20, 40, 10], [0, 0, 0]]);\n\nconst box = (state: Matrix | undefined, action: boxAction) => {\n  if (state === undefined) return initialBoxState;\n  return action.type === UPDATE_BOX\n    ? (add(action.payload, state) as Matrix)\n    : state;\n};\n\nconst rays = (state: number | undefined, action: rayAction) => {\n  if (state === undefined) return 1;\n\n  switch (action.type) {\n    case INC_RAYS:\n      return state + 1;\n    case DEC_RAYS:\n      const dec = state - 1;\n      return dec >= 0 ? dec : 0;\n    default:\n      return state;\n  }\n};\n\nconst initialBeamBoxState = matrix([\n  [-100, 0, 0],\n  [200, 200, 4],\n  [0, Math.PI / 2, 0],\n]);\n\nconst beamBox = (state: Matrix | undefined, action: boxAction) => {\n  if (state === undefined) return initialBeamBoxState;\n  return action.type === UPDATE_BEAM_BOX\n    ? (add(action.payload, state) as Matrix)\n    : state;\n};\n\nconst radon = combineReducers({\n  beamBox,\n  box,\n  rays,\n});\n\nexport default radon;\nexport type radonState = ReturnType<typeof radon>;\n","import webgl from 'store/webgl/reducers';\nimport {WebGLAction} from 'store/webgl/types';\nimport projections from 'store/projections/reducers';\nimport radon from 'store/radon/reducers';\nimport {RadonAction} from 'store/radon/actions';\nimport {MutationAction} from 'store/projections/types';\nimport {combineReducers} from 'redux';\n\nconst reducer = combineReducers({\n  webgl,\n  projections,\n  radon,\n});\n\nexport type ReduxState = ReturnType<typeof reducer>;\nexport type ReduxAction = WebGLAction | MutationAction | RadonAction;\nexport default reducer;\n","import React, {Component} from 'react';\nimport {Matrix, index, matrix} from 'mathjs';\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport {\n    Object3D,\n    Vector3,\n    Color,\n    MeshPhongMaterial,\n    DoubleSide,\n    BoxGeometry,\n    Mesh,\n    WebGLRenderer,\n    Camera,\n    Scene,\n    Group,\n    PerspectiveCamera,\n    DirectionalLight,\n    /* Raycaster, */\n    MeshBasicMaterial,\n    TextureLoader,\n    PlaneGeometry,\n} from 'three';\n\n\nconst v = (x: number, y: number, z: number) => new Vector3(x, y, z)\n\n function meshColor(color: Vector3) {\n     const co = () => new Color(color.x, color.y, color.z)\n     return new MeshPhongMaterial({\n         // light\n         specular: co(),\n         // intermediate\n         color: co().addScalar(-.3),\n         // dark\n         emissive: co().addScalar(-.8),\n         shininess: 50,\n         wireframe: false,\n         side: DoubleSide,\n         //map: ImageUtils.loadTexture('http://i.imgur.com/xCE2Br4.jpg?1')\n     });\n }\n\nfunction getRow(m: Matrix, row: number): number[] {\n    return (m.subset(index(row, [0, 1, 2])).toArray() as number[][])[0]\n}\n\nfunction Box(box: Matrix) {\n    const [x, y, z] = getRow(box, 0)\n    const [w, h, d] = getRow(box, 1)\n    const [a, b, c] = getRow(box, 2)\n\n    var geometry = new BoxGeometry(w, h, d)\n\n    geometry.translate(x, y, z)\n    geometry.rotateX(a)\n    geometry.rotateY(b)\n    geometry.rotateZ(c)\n\n    return new Mesh(geometry, meshColor(v(0, 0, 1)))\n }\n\nconst Beams = (obj: Object3D, bbox: Matrix, N: number) => {\n\n    const y = getRow(bbox, 0)[1]\n    const [w, h] = getRow(bbox, 1)\n\n    // Create canvas\n    let canvas = document.createElement('canvas');\n    canvas.height = h;\n    canvas.width = w;\n\n    const context = canvas.getContext('2d');\n    if( context === null ) return;\n    const imgData = context.createImageData(w, h);\n\n    for( let i = 0; i < N; i++) {\n        /* const [a, b, c] = getRow(bbox, 2) */\n\n        const by = Math.floor(y+(i*(h/N))+h/(2*N))\n\n        const start = by*w*4\n        const end = start + w*4\n\n        for (let j = start; j < end; j+=4) {\n            imgData.data[j] = 255\n            imgData.data[j+1] = 255\n            imgData.data[j+2] = 255\n            imgData.data[j+3] = 255\n        }\n\n        /* const srcPos = v(x, by, z) */\n        /* const destPos =  v(x + w, by, z) */\n\n        /* const ray = new Raycaster(srcPos, destPos.sub(srcPos).normalize()) */\n        /* const intersections = ray.intersectObject(obj) */\n    }\n\n    // put data to context at (0, 0)\n    context.putImageData(imgData, 0, 0);\n\n    // output image\n    const texture = new TextureLoader().load( canvas.toDataURL('image/png') );\n\n    // immediately use the texture for material creation\n    const mat = new MeshBasicMaterial( { map: texture, transparent: true} );\n    const geo = new PlaneGeometry(w, h)\n    return new Mesh(geo, mat)\n}\n\n\n/* function addXrayBeam(scene: Scene) { */\n/*     var srcPos =  v(-200, 0, 0) */\n/*     var destPos =  v(200, 0, 0) */\n/*     var dist = srcPos.distanceTo(destPos) */\n/*   */\n/*     var ray = new Raycaster(srcPos, destPos.sub(srcPos).normalize()) */\n/*   */\n/*     return (obj: Object3D) => { */\n/*         var intersections = ray.intersectObject(obj) */\n/*         if( intersections.length < 2 ) return; */\n/*  */\n/*         var first = intersections[0] */\n/*         var last = intersections[intersections.length-1] */\n/*         var throughObj = last.distance - first.distance  */\n/*         var ratio = 10*(throughObj*throughObj)/(dist*dist) */\n/*         setBeamOpacity(1 - ratio) */\n/*         return ratio */\n/*     } */\n/* } */\n\nclass RadonScene {\n    webGLRenderer: WebGLRenderer\n    camera: Camera\n    scene: Scene\n    oc: OrbitControls\n\n    constructor(children: Object3D[]) {\n        this.webGLRenderer = new WebGLRenderer()\n        this.webGLRenderer.setSize( window.innerWidth, window.innerHeight )\n        this.webGLRenderer.setPixelRatio( window.devicePixelRatio );\n\n        this.scene = new Scene()\n\n        this.camera = new PerspectiveCamera( 80, window.innerWidth / window.innerHeight, 0.1, 1000 )\n        this.camera.position.x = 100\n        this.camera.position.y = 0\n        this.camera.position.z = 0\n\n        console.log('adding orbit controls')\n\n        var light = new DirectionalLight(0xfdfdfd, 2);\n        // you set the position of the light and it shines into the origin\n        light.position.set(2, 2, 1).normalize();\n        this.scene.add(light);\n        this.oc = new OrbitControls(this.camera)\n\n        children.forEach(c => this.scene.add(c as Object3D));\n    }\n\n    onDrag(f: (e: any) => void) {\n        this.oc.addEventListener('drag', f)\n    }\n\n    render() {\n        this.webGLRenderer.render(this.scene, this.camera)\n        return (<div id=\"scene-container\" ref={d => d ? d.appendChild(this.webGLRenderer.domElement) : \"\"}></div>)\n    }\n}\n\ninterface RadonProps {\n    box: Matrix;\n    beamBox: Matrix;\n    numRays: number;\n    rotateBox: (r: number) => void;\n    rotateBeamBox: (r: number) => void;\n    incRays: () => void\n    decRays: () => void\n}\n\nfunction BeamBox(obj: Object3D, bbox: Matrix, N: number): Group {\n    const [x, y, z] = getRow(bbox, 0)\n    const [w, h, d] = getRow(bbox, 1)\n    const [a, b, c] = getRow(bbox, 2)\n\n    const g = new Group()\n    const barW = w/100\n    const leftBar = Box(matrix([[x, y, z], [barW, h, d], [0, 0, 0]]))\n    const rightBar = Box(matrix([[x + w, y, z], [barW, h, d], [0, 0, 0]]))\n    \n\n    const beams = Beams(obj, bbox, N)\n    if( beams !== undefined) g.add(beams)\n\n    g.add(leftBar)\n    g.add(rightBar)\n\n    g.rotateX(a)\n    g.rotateY(b)\n    g.rotateZ(c)\n\n    return g\n}\n\nexport default class Radon extends Component<RadonProps> {\n    rs: RadonScene\n    b: Object3D\n    bb: Group\n\n    constructor(props: RadonProps) {\n        super(props)\n        setInterval(() => this.props.rotateBeamBox(.01), 10)\n        this.b = Box(this.props.box)\n        this.bb = BeamBox(this.b, this.props.beamBox, this.props.numRays)\n        this.rs = new RadonScene([\n            this.b,\n            this.bb,\n        ])\n    }\n\n    render() {\n        /* this.bb.rotateZ(.01) */\n        this.b.rotateX(.01)\n        return (\n            <div>\n                <div id='controls' style={{position: 'absolute'}}>\n                    <button onClick={this.props.incRays}>\n                        Add Beam\n                    </button>\n                    <button onClick={this.props.decRays}>\n                        Remove Beam\n                    </button>\n                </div>\n                {this.rs.render()}\n            </div>)\n    }\n}\n","import {connect} from 'react-redux';\nimport {matrix} from 'mathjs';\nimport {ReduxState} from 'store/reducer';\nimport {\n  updateBox,\n  updateBeamBox,\n  incRays,\n  decRays,\n  RadonAction,\n} from 'store/radon/actions';\nimport RadonScene from 'components/radon/scene';\n\nconst rotateX = (theta: number) =>\n  matrix([[0, 0, 0], [0, 0, 0], [theta, 0, 0]]);\n\nconst mapState = (state: ReduxState) => ({\n  box: state.radon.box,\n  beamBox: state.radon.beamBox,\n  numRays: state.radon.rays,\n});\n\nconst mapDispatch = (dispatch: (action: RadonAction) => void) => ({\n  rotateBox: (theta: number) => dispatch(updateBox(rotateX(theta))),\n  rotateBeamBox: (theta: number) => dispatch(updateBeamBox(rotateX(theta))),\n  incRays: () => dispatch(incRays()),\n  decRays: () => dispatch(decRays()),\n});\n\nexport default connect(\n  mapState,\n  mapDispatch,\n)(RadonScene);\n","import React from 'react';\nimport './App.css';\nimport reducer from 'store/reducer';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk'\nimport RadonScene from 'containers/radon';\n// import ConfigPanel from 'containers/mutations/config-panel';\n// import ShaderCanvas from 'containers/canvas/shader-canvas'\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(thunk),\n))\n\n/* <ConfigPanel />\n<ShaderCanvas /> */\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <RadonScene />\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}